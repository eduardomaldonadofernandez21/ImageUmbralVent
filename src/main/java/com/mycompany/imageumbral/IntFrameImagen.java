package com.mycompany.imageumbral;

import java.awt.Dimension;
import java.awt.Point;
import java.io.File;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;

public class IntFrameImagen extends javax.swing.JInternalFrame {
    
    private JOptionPane dialog;
    private File image;
    private JDesktopPane ventanaPrinc;

    public IntFrameImagen(String title, File img, JDesktopPane ventPr) {
        initComponents();
        this.setPreferredSize(new Dimension(1000,1000));
        this.setMaximizable(true);
        this.setIconifiable(true);
        this.setClosable(true);
        this.setResizable(false);
        dialog = new JOptionPane();
        ventanaPrinc = ventPr;
        image = img;
        tituloImgLabel.setText(title);
        lienzo.updateImage(img);  
        adjustPosition();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lienzo = new com.mycompany.imageumbral.Lienzo();
        tituloImgLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        FilterMenu = new javax.swing.JMenu();
        umbralMenuItem = new javax.swing.JMenuItem();
        restoreMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        inforMenuItem = new javax.swing.JMenuItem();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
        });

        lienzo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout lienzoLayout = new javax.swing.GroupLayout(lienzo);
        lienzo.setLayout(lienzoLayout);
        lienzoLayout.setHorizontalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 848, Short.MAX_VALUE)
        );
        lienzoLayout.setVerticalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        tituloImgLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tituloImgLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloImgLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        FilterMenu.setText("Filter");

        umbralMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        umbralMenuItem.setText("Threshold");
        umbralMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umbralMenuItemActionPerformed(evt);
            }
        });
        FilterMenu.add(umbralMenuItem);

        restoreMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        restoreMenuItem.setText(" Restore original image");
        restoreMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreMenuItemActionPerformed(evt);
            }
        });
        FilterMenu.add(restoreMenuItem);

        menuBar.add(FilterMenu);

        helpMenu.setText("Help");

        inforMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        inforMenuItem.setText("About");
        inforMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inforMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(inforMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addComponent(lienzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
            .addGroup(layout.createSequentialGroup()
                .addGap(326, 326, 326)
                .addComponent(tituloImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(lienzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void umbralMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umbralMenuItemActionPerformed
        if(lienzo.isImage()){
            String umbral = dialog.showInputDialog(null,"Introduzca el valor del umbral para la imagen","Valor umbral", JOptionPane.QUESTION_MESSAGE);
            if(!checkUmbral(umbral) && umbral != null ){
                dialog.showMessageDialog(null,"Error al introducir el valor umbral: Debe ser un número entero y con un rango de 0 a 255","Dato inválido", JOptionPane.ERROR_MESSAGE);
            }else if(umbral != null){
                IntFrameUmbralizada ventanaUmb = new IntFrameUmbralizada(umbral,image,ventanaPrinc);
                ventanaPrinc.add(ventanaUmb);
                ventanaUmb.setTitle("Umbral: " + umbral);
                ventanaUmb.setLocation(new Point(50, 80));
                ventanaUmb.setVisible(true);
            }
        }else{
            dialog.showMessageDialog(null,"Hay que abrir una imagen para poder umbralizarla","No hay imagen", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_umbralMenuItemActionPerformed

    private void restoreMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreMenuItemActionPerformed
        if(lienzo.isImage()){
            lienzo.restoreImage();
        }else{
            dialog.showMessageDialog(null, "Hay que abrir una imagen para poder restaurarla","No hay imagen", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_restoreMenuItemActionPerformed

    private void inforMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inforMenuItemActionPerformed
        dialog.showMessageDialog(null,"Mediante esta aplicación:\n1. Usted puede seleccionar una imagen '.jpg' o '.png' en el menu File en la opción Open o con el botón 'Open Image'.\n2. Una vez escogida la imagen, se muestra por una ventana interna.\n3. Para umbralizar la imagen, seleccione el menu Filter de la ventana interna de la imagen original y su opción Threshold.\n4. Para guardar la imagen umbralizada, seleccionamos el menu File la opción Save en la ventana interna umbralizada. ","Acerca de", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_inforMenuItemActionPerformed

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        adjustPosition();
    }//GEN-LAST:event_formComponentMoved

    private void adjustPosition(){
        double anchoPr = ventanaPrinc.getWidth();
        double alturaPr = ventanaPrinc.getHeight();
        Point PointVen = this.getLocation();
        double anchoV = this.getWidth();
        double alturaV = this.getHeight();
        Point newPosition = new Point((int)PointVen.getX(), (int)PointVen.getY());
        if(PointVen.getY() < 0){
            newPosition.setLocation(newPosition.getX(),0);
        }else{
            if(PointVen.getY()+alturaV > alturaPr){
                newPosition.setLocation(PointVen.getX(),(alturaPr - alturaV));
            }
        }
        if(PointVen.getX() < 0){
            newPosition.setLocation(0, newPosition.getY());
        }else{
            if(PointVen.getX()+anchoV > anchoPr){
                newPosition.setLocation((anchoPr - anchoV), PointVen.getY());
            }   
        }
        this.setLocation(newPosition);
    }
    
    
    private boolean checkUmbral(String input){
        int umbral;
        try { 
        umbral = Integer.parseInt(input); 
        } catch(NumberFormatException e) { 
            return false; 
        } catch(NullPointerException e) {
            return false;
        }
        return !(umbral > 255 || umbral < 0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu FilterMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem inforMenuItem;
    private com.mycompany.imageumbral.Lienzo lienzo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem restoreMenuItem;
    private javax.swing.JLabel tituloImgLabel;
    private javax.swing.JMenuItem umbralMenuItem;
    // End of variables declaration//GEN-END:variables
}
